<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by David (Team) -->
<!--
//=============================================================================
//
//  FILE INFO
//    $Id: XmlSmpServiceActivationSchema.xsd,v 1.18 2011/11/30 16:53:37 davidx Exp $
//
//  DESCRIPTION
//
//  REVISION HISTORY
//  *  Based on CVS log
//
//  Copyright (c) 1993 - 2006 Sigma Systems Canada Inc. All rights reserved.
//=============================================================================
-->
<xs:schema xmlns:ns2="http://www.sigma-systems.com/schemas/3.1//SmpCBECoreSchema" xmlns:ns1="http://www.sigma-systems.com/schemas/3.1/SmpCBECoreSchema" xmlns:sa="http://java.sun.com/products/oss/xml/ServiceActivation" xmlns:cmn="http://java.sun.com/products/oss/xml/Common" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:smpcmn="http://www.sigma-systems.com/schemas/3.1/SmpCommonValues" xmlns="http://www.sigma-systems.com/schemas/3.1/SmpServiceActivationSchema" xmlns:smpcbe="http://www.sigma-systems.com/schemas/3.1/SmpCBECoreSchema" xmlns:ns3="http://www.sigma-systems.com/schemas/3.1/SmpCBEServiceSchema" targetNamespace="http://www.sigma-systems.com/schemas/3.1/SmpServiceActivationSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://java.sun.com/products/oss/xml/ServiceActivation" schemaLocation="XmlServiceActivationSchema.xsd"/>
	<xs:import namespace="http://www.sigma-systems.com/schemas/3.1/SmpCBEServiceSchema" schemaLocation="XmlSmpCBEServiceSchema.xsd"/>
	<xs:import namespace="http://java.sun.com/products/oss/xml/Common" schemaLocation="XmlCommonSchema.xsd"/>
	<xs:import namespace="http://www.sigma-systems.com/schemas/3.1/SmpCommonValues" schemaLocation="XmlSmpCommonSchema.xsd"/>
	<xs:import namespace="http://www.sigma-systems.com/schemas/3.1/SmpCBECoreSchema" schemaLocation="XmlSmpCBECoreSchema.xsd"/>
	<xs:annotation>
		<xs:documentation>====SubSvc Value====</xs:documentation>
	</xs:annotation>
	<xs:complexType name="SubSvcKeyType">
		<xs:complexContent>
			<xs:extension base="sa:ServiceKey">
				<xs:sequence>
					<xs:choice>
						<xs:element name="nameQuery" type="smpcmn:NamedQuery" minOccurs="0"/>
						<xs:element name="externalKey" type="xs:string" minOccurs="0"/>
						<xs:element name="xpathKey" type="xs:string" minOccurs="0"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubSvcType">
		<xs:complexContent>
			<xs:extension base="sa:ServiceValue">
				<xs:sequence>
					<xs:element name="parentServiceKey" type="SubSvcKeyType" minOccurs="0"/>
					<xs:element name="paramList" type="smpcbe:EntityParamListType" minOccurs="0"/>
					<xs:element name="endDateTime" type="xs:dateTime" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
					<xs:element name="associationList" type="smpcbe:AssocListType" minOccurs="0"/>
					<xs:element name="childServiceList" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="serviceValue" type="SubSvcType" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubSvcStateType">
		<xs:simpleContent>
			<xs:extension base="sa:ServiceStateType">
				<xs:attribute name="provisionState" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>====order LineItem====</xs:documentation>
	</xs:annotation>
	<xs:complexType name="LineItemKeyType">
		<xs:complexContent>
			<xs:extension base="sa:OrderKey"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="ItemStateType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="open.not_running.not_started"/>
			<xs:enumeration value="open.running"/>
			<xs:enumeration value="open.running.failed"/>
			<xs:enumeration value="open.running.workflow"/>
			<xs:enumeration value="closed.completed.all"/>
			<xs:enumeration value="closed.completed.enforced"/>
			<xs:enumeration value="closed.aborted.aborted_by_server"/>
			<xs:enumeration value="closed.aborted.aborted_by_client"/>
			<xs:enumeration value="closed.aborted.invalid"/>
			<xs:enumeration value="closed.aborted.enforced"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="OrderItemType">
		<xs:sequence>
			<xs:element name="orderItemKey" type="LineItemKeyType" minOccurs="0"/>
			<xs:element name="action" type="xs:string"/>
			<xs:element name="itemParamList" type="smpcmn:ParamListType" minOccurs="0"/>
			<xs:element name="entityKey" type="cmn:ManagedEntityKey" minOccurs="0"/>
			<xs:element name="entityValue" type="cmn:ManagedEntityValue" minOccurs="0"/>
			<xs:element name="itemState" type="xs:string" minOccurs="0"/>
			<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>====order value====</xs:documentation>
	</xs:annotation>
	<xs:element name="SampOrder">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="comment" type="xs:string" minOccurs="0"/>
				<xs:element name="orderValue" type="sa:OrderValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="OrderKeyType">
		<xs:complexContent>
			<xs:extension base="sa:OrderKey">
				<xs:sequence>
					<xs:element name="externalKey" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubOrderStateType">
		<xs:simpleContent>
			<xs:extension base="sa:OrderStateType">
				<xs:attribute name="smpState" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="CreateOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:CreateOrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ModifyOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:ModifyOrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CancelOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:CancelOrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ResumeOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SuspendOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ActionOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="orderItemList">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="orderItem" type="OrderItemType" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SnapshotOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="subscriber" type="smpcbe:SubType"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReprovisionSubOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="smpcbe:SubKeyType"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OrderParamChangeValue">
		<xs:annotation>
			<xs:documentation>A value for submitting order header parm change</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="orderParamList" type="smpcmn:ParamListType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BatchOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="ns1:SubKeyType" minOccurs="0"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>====execute order request====</xs:documentation>
	</xs:annotation>
	<xs:element name="executeOrderRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderValue" type="sa:OrderValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="executeOrderResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderKey" type="OrderKeyType"/>
				<xs:element name="orderState" type="SubOrderStateType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="executeOrderException">
		<xs:complexType>
			<xs:choice>
				<xs:element name="illegalStateException" type="cmn:IllegalStateException"/>
				<xs:element name="objectNotFoundException" type="cmn:ObjectNotFoundException"/>
				<xs:element name="illegalArgumentException" type="cmn:IllegalArgumentException"/>
				<xs:element name="remoteException" type="cmn:RemoteException"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>====repairOrderByKeyRequest===</xs:documentation>
	</xs:annotation>
	<xs:element name="repairOrderByKeyRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderKey" type="OrderKeyType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="repairOrderByKeyResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderValue" type="sa:OrderValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="repairOrderByKeyException">
		<xs:complexType>
			<xs:choice>
				<xs:element name="illegalStateException" type="cmn:IllegalStateException"/>
				<xs:element name="objectNotFoundException" type="cmn:ObjectNotFoundException"/>
				<xs:element name="illegalArgumentException" type="cmn:IllegalArgumentException"/>
				<xs:element name="remoteException" type="cmn:RemoteException"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>=====replicateOrderByKey=====</xs:documentation>
	</xs:annotation>
	<xs:element name="replicateOrderByKeyRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderKey" type="OrderKeyType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="replicateOrderByKeyResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderValue" type="sa:OrderValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="replicateOrderByKeyException">
		<xs:complexType>
			<xs:choice>
				<xs:element name="illegalStateException" type="cmn:IllegalStateException"/>
				<xs:element name="objectNotFoundException" type="cmn:ObjectNotFoundException"/>
				<xs:element name="illegalArgumentException" type="cmn:IllegalArgumentException"/>
				<xs:element name="remoteException" type="cmn:RemoteException"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>====execute order async request=====</xs:documentation>
	</xs:annotation>
	<xs:element name="ExecuteOrderAsyncRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderValue" type="sa:OrderValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ExecuteOrderAsyncResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderKey" type="OrderKeyType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ExecuteOrderAsyncException">
		<xs:complexType>
			<xs:choice>
				<xs:element name="illegalStateException" type="cmn:IllegalStateException"/>
				<xs:element name="illegalArgumentException" type="cmn:IllegalArgumentException"/>
				<xs:element name="remoteException" type="cmn:RemoteException"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>====Service Query request, this response contains subSvc in SubSvcType defined in this schema ====</xs:documentation>
	</xs:annotation>
	<xs:element name="getServiceByKeyRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="serviceKey" type="SubSvcKeyType" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="cascadeLoading" type="xs:boolean" default="false"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="getServiceByKeyResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="serviceValue" type="SubSvcType" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getServiceByKeyException">
		<xs:complexType>
			<xs:choice>
				<xs:element name="objectNotFoundException" type="cmn:ObjectNotFoundException"/>
				<xs:element name="illegalArgumentException" type="cmn:IllegalArgumentException"/>
				<xs:element name="remoteException" type="cmn:RemoteException"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>===extention for notification===</xs:documentation>
	</xs:annotation>
	<xs:element name="orderMsgNotificationEvent" type="SmpOrderMsgNotificationEventType"/>
	<xs:complexType name="SmpOrderMsgNotificationEventType">
		<xs:complexContent>
			<xs:extension base="cmn:BaseEventType">
				<xs:sequence>
					<xs:element name="orderKey" type="OrderKeyType"/>
					<xs:element name="itemKey" type="LineItemKeyType" minOccurs="0"/>
					<xs:element name="level" type="xs:string"/>
					<xs:element name="topic" type="xs:string"/>
					<xs:element name="errorCode" type="xs:string"/>
					<xs:element name="errorReason" type="xs:string"/>
					<xs:element name="eventParamList" type="smpcmn:ParamListType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SmpOrderStateChangeEventType">
		<xs:complexContent>
			<xs:extension base="sa:OrderStateChangeEventType">
				<xs:sequence>
					<xs:element name="eventParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="exception" type="cmn:BaseException" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SmpOrderItemStateChangeEventType">
		<xs:complexContent>
			<xs:extension base="sa:OrderStateChangeEventType">
				<xs:sequence>
					<xs:element name="orderItemNotifications">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="item" maxOccurs="unbounded">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="itemKey" type="LineItemKeyType"/>
											<xs:element name="currentState" type="xs:string"/>
											<xs:element name="reason" type="xs:string"/>
											<xs:element name="eventParamList" type="smpcmn:ParamListType"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>====STM Batch Order====</xs:documentation>
	</xs:annotation>
	<xs:complexType name="SSNChangeValue">
		<xs:sequence>
			<xs:element name="subSvcId" type="xs:long"/>
			<xs:element name="isSSNUpdated" type="xs:boolean" default="false"/>
			<xs:element name="SSNVersion" type="xs:long"/>
			<xs:element name="numOfImpactedSubSvc" type="xs:long"/>
			<xs:element name="oldSSNList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="item" type="OldSSNItem" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BatchReproOrderValue">
		<xs:complexContent>
			<xs:extension base="sa:OrderValue">
				<xs:sequence>
					<xs:element name="subKey" type="ns1:SubKeyType"/>
					<xs:element name="orderParamList" type="smpcmn:ParamListType" minOccurs="0"/>
					<xs:element name="SSNChangeList">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="projectId" type="xs:string"/>
								<xs:element name="item" type="SSNChangeValue" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="auditInfo" type="smpcmn:AuditInfoType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubNetworkValue">
		<xs:sequence>
			<xs:element name="id" type="xs:long"/>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="paramList" type="smpcmn:ParamListType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OldSSNItem">
		<xs:complexContent>
			<xs:extension base="SubNetworkValue">
				<xs:attribute name="roleId" type="xs:long"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
